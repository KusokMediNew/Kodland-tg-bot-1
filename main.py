import telebot
import logging
import re
from config import TOKEN, ADMINS, LOGGING

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: –µ—Å–ª–∏ LOGGING=True, –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏, –∏–Ω–∞—á–µ —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
if LOGGING:
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
else:
    logging.basicConfig(level=logging.CRITICAL)  # –û—Ç–∫–ª—é—á–∏—Ç—å –æ–±—ã—á–Ω—ã–µ –ª–æ–≥–∏

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤ (—Ä—É—Å—Å–∫–∏–π –º–∞—Ç –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω—ã–µ —Å–ª–æ–≤–∞)
BAD_WORDS = [
    # –†—É—Å—Å–∫–∏–π –º–∞—Ç (30 —Å–ª–æ–≤/—Ñ—Ä–∞–∑)
    "—Ö—É–π", "–ø–∏–∑–¥–∞", "–µ–±–∞—Ç—å", "–µ–±–∞–Ω—ã–π", "–µ–±–∞–Ω", "–µ–±–ª–æ", "–µ–±–ª–∞–Ω", "–µ–±–∞—Ä—å", "–µ–±–ª—è", "–µ–±—É—á–∏–π", "—ë–±", "—ë–±–∞–Ω—ã–π",
    "–º—É–¥–∞–∫", "–º—É–¥–∏–ª–∞", "–º–∞–Ω–¥–∞", "–º–∞–Ω–¥–æ–≤–æ—à–∫–∞", "–º–∞–Ω–¥–∞–≤–æ—à–∫–∞", "–≥–∞–Ω–¥–æ–Ω", "–∑–∞–ª—É–ø–∞", "–ø–∏–¥–æ—Ä", "–ø–∏–¥–æ—Ä–∞—Å", "–ø–∏–¥—Ä–∏–ª–∞",
    "–ø–∏–¥—Ä–∏–ª–ª–∞", "–ø–∏–¥–æ—Ä–∫–∞", "–ø–∏–¥–æ—Ä–æ–∫", "–ø–∏–¥–æ—Ä—é–≥–∞", "–ø–∏–¥–æ—Ä—é–∂–∫–∞", "–ø–∏–¥–æ—Ä—á–æ–Ω–æ–∫", "–ø–∏–¥–æ—Ä—á–∏—Ö–∞", "–ø–∏–¥–æ—Ä—é–≥–∞", "–ø–∏–¥–æ—Ä—é–∂–∫–∞",
    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω—ã–µ —Å–ª–æ–≤–∞ (30+)
    "pornhub", "sex", "xxx", "porn", "anal", "oral", "gay", "lesbian", "erotic", "fuck", "shit", "bitch", "cunt",
    "pussy", "dick", "cock", "penis", "vagina", "masturbate", "masturbation", "cum", "sperm", "orgasm", "blowjob",
    "handjob", "fisting", "incest", "rape", "bestiality", "zoophilia", "childporn", "child porn", "child sex",
    "pedophile", "slut", "whore", "asshole", "jerkoff", "wank", "spank", "suck", "deepthroat", "rimjob", "felch",
    "twat", "motherfucker", "nigger", "fag", "faggot", "tranny", "cumshot", "gangbang", "milf", "bdsm", "bondage"
]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    if LOGGING:
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø—Ä–æ—Å—Ç–æ–π Telegram-–±–æ—Ç.\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start ‚Äì –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n/search <—Ç–µ–∫—Å—Ç> –∏–ª–∏ /search ‚Äì –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –≤ Google\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ Google! üîé".replace('<', '&lt;').replace('>', '&gt;'))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search —Å —Ç–µ–∫—Å—Ç–æ–º
@bot.message_handler(commands=['search'])
def search_handler(message):
    args = message.text.split(maxsplit=1)
    if len(args) > 1:
        search_text = args[1].strip()
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞
        search_text_no_spaces = search_text.replace(' ', '')
        found_bad = []
        for bad_word in BAD_WORDS:
            if bad_word in search_text_no_spaces or re.search(rf"\b{bad_word}\b", search_text):
                found_bad.append(bad_word)
        if found_bad:
            bot.send_message(message.chat.id, f"–≠—Ç–æ –ø–ª–æ—Ö–æ–π –∑–∞–ø—Ä–æ—Å ‚ùå\n–ü–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞: {', '.join(found_bad)}")
            return
        keyboard = telebot.types.InlineKeyboardMarkup()
        search_button = telebot.types.InlineKeyboardButton(
            text="üîé –ò—Å–∫–∞—Ç—å –≤ Google",
            url=f"https://www.google.com/search?q={search_text.replace(' ', '+')}"
        )
        keyboard.add(search_button)
        bot.send_message(
            message.chat.id,
            f'–¢—ã –Ω–∞–ø–∏—Å–∞–ª: <b>"{search_text}"</b>\n\nüëá –ù–∞–π—Ç–∏ —ç—Ç–æ –≤ Google:',
            reply_markup=keyboard
        )
    else:
        msg = bot.send_message(
            message.chat.id,
            "üîé <b>–ß—Ç–æ –Ω–∞–π—Ç–∏?</b>\n\n"
            "1Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∏–∂–µ, –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ Google!\n"
            "2Ô∏è‚É£ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω—ã–µ —Å–ª–æ–≤–∞ ‚Äî —Ç–∞–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è.\n\n"
            "‚úçÔ∏è –ñ–¥—É –≤–∞—à –∑–∞–ø—Ä–æ—Å!"
        )
        bot.register_next_step_handler(msg, process_search_text)

def process_search_text(message):
    search_text = message.text.strip()
    search_text_no_spaces = search_text.replace(' ', '')
    found_bad = []
    for bad_word in BAD_WORDS:
        if bad_word in search_text_no_spaces or re.search(rf"\b{bad_word}\b", search_text):
            found_bad.append(bad_word)
    if found_bad:
        bot.send_message(message.chat.id, f"–≠—Ç–æ –ø–ª–æ—Ö–æ–π –∑–∞–ø—Ä–æ—Å ‚ùå\n–ü–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞: {', '.join(found_bad)}")
        return
    keyboard = telebot.types.InlineKeyboardMarkup()
    search_button = telebot.types.InlineKeyboardButton(
        text="üîé –ò—Å–∫–∞—Ç—å –≤ Google",
        url=f"https://www.google.com/search?q={search_text.replace(' ', '+')}"
    )
    keyboard.add(search_button)
    bot.send_message(
        message.chat.id,
        f'–¢—ã –Ω–∞–ø–∏—Å–∞–ª: <b>"{search_text}"</b>\n\nüëá –ù–∞–π—Ç–∏ —ç—Ç–æ –≤ Google:',
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∫–æ–º–∞–Ω–¥)
@bot.message_handler(func=lambda message: message.content_type == 'text' and not message.text.startswith('/'))
def ignore_text(message):
    bot.send_message(message.chat.id, "–Ø —Ä–µ–∞–≥–∏—Ä—É—é —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –ø–æ–∏—Å–∫–∞.")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞: –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    if LOGGING:
        logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)
